/*----------------------------------------------------
 |   This file was generated by Sense Composer 2.0   |
 |  Do not modify the Sense Composer Generated Code  |
 ----------------------------------------------------*/
#pragma once

#include "Workflow/control/toucheditbox.h"
#include "../customlistview.h"
#include "../../Localization.h"
#include "../../Resource.h"
#include <Sense.h>
#include <DLS.h>

namespace Philips { namespace Workflow { namespace Control { namespace Ui {


	using namespace Sense;
	using namespace Sense::DLS;

	class FileBrowserTouch : public Control
	{
	public:

		FileBrowserTouch(Control &parent, Workflow::Control::VirtualKeyboard &keyboard)
			:
			Control(parent)
		#pragma region Sense Composer (do not modify)
	,	panel            (*this)
	,	DialogPanel      ((Control&)panel)
	,	btnSelect        (DialogPanel)
	,	btnBack          (DialogPanel)
	,	btnAddFolder     (DialogPanel)
	,	headerLabel      (DialogPanel)
	,	pathLabel        (DialogPanel)
	,	listPanel        ((Control&)DialogPanel)
	,	listFile         (listPanel)
	,	lblAddFolder     (listPanel)
	,	lblFolderName    (listPanel)
	,	btnCreateFolder  (listPanel)
	,	wrongFilenameInfoLabel(listPanel)
	,	wrongFileNameLabel(listPanel)
	,	btnCancel        (DialogPanel)
	,	pathIcon         (DialogPanel)
		#pragma endregion
			, listViewHeader4(listFile)
			, listViewHeader(listFile)
			, listViewHeader2(listFile)
			, listViewHeader3(listFile)
			, editFolderName(listPanel, keyboard, TouchEditBox::ClearButtonVisible::Auto)
			, usbUnlockPasswordBox(listPanel, keyboard, TouchEditBox::ClearButtonVisible::Hide)
			, btnShowHide(listPanel)
		{
		#pragma region Sense Composer (do not modify)
		layoutUpdateBegin();
		name                             = L"FileBrowserTouch";
		size                             = Size(700, 660);
		panel.name                       = L"panel";
		panel.size                       = Size(700, 660);
		panel.colorBorder                = Palette::Transparent * 0.00;
		panel.colorEdge                  = Palette::Transparent * 0.00;
		panel.color                      = Palette::Gray90 * 0.80;
		DialogPanel.name                 = L"DialogPanel";
		DialogPanel.size                 = Size(700, 660);
		DialogPanel.radius               = Corners(4, 4, 4, 4);
		DialogPanel.shadow               = Margin(8, 8, 8, 8);
		DialogPanel.colorShadow          = Palette::Gray75;
		DialogPanel.color                = Palette::Gray70;
		btnSelect.name                   = L"btnSelect";
		btnSelect.position               = Point(476, 576);
		btnSelect.size                   = Size(200, 64);
		btnSelect.font                   = Font(L"CentraleSansBook", 20, false, false, false, false, Font::Antialias::High);
		btnSelect.text                   = Localization::select;    //L"";
		btnSelect.radius                 = Corners(4, 4, 4, 4);
		btnSelect.colorFontUp            = Palette::White;
		btnSelect.colorFontDown          = Palette::White;
		btnSelect.colorFontHover         = Palette::White;
		btnSelect.colorFontDisabled      = Color::fromRgb(116, 116, 116);
		btnSelect.colorButtonUp          = Palette::GroupBlue45;
		btnSelect.colorButtonDown        = Palette::GroupBlue55;
		btnSelect.colorButtonHover       = Palette::GroupBlue50;
		btnSelect.colorButtonDisabled    = Color::fromRgb(45, 72, 94);
		btnSelect.colorFocusUp           = Palette::GroupBlue45;
		btnSelect.colorFocusDown         = Palette::GroupBlue55;
		btnSelect.colorFocusHover        = Palette::GroupBlue50;
		btnSelect.colorFocusDisabled     = Palette::Blue45;
		btnBack.name                     = L"btnBack";
		btnBack.position                 = Point(24, 132);
		btnBack.size                     = Size(232, 64);
		btnBack.font                     = Font(L"CentraleSansBook", 20, false, false, false, false, Font::Antialias::High);
		btnBack.noActivate               = true;
		btnBack.text                     = Localization::folderUp;    //L"";
		btnBack.textMargin               = Margin(33, 20, 33, 20);
		btnBack.horizontalAlign          = HAlign::Left;
		btnBack.image                    = Image(L"PLACEHOLDER_DLS_FolderBack_24.png");
		btnBack.imageSize                = Size(32, 24);
		btnBack.imageSpacing             = 10;
		btnBack.imagePosition            = ImagePosition::LeftMost;
		btnAddFolder.name                = L"btnAddFolder";
		btnAddFolder.position            = Point(476, 132);
		btnAddFolder.size                = Size(200, 64);
		btnAddFolder.font                = Font(L"CentraleSansBook", 20, false, false, false, false, Font::Antialias::High);
		btnAddFolder.text                = Localization::addFolder;    //L"";
		btnAddFolder.textMargin          = Margin(20, 20, 15, 20);
		btnAddFolder.horizontalAlign     = HAlign::Left;
		btnAddFolder.imageSize           = Size(28, 28);
		btnAddFolder.imageSpacing        = 10;
		btnAddFolder.imagePosition       = ImagePosition::LeftMost;
		headerLabel.name                 = L"headerLabel";
		headerLabel.position             = Point(24, 22);
		headerLabel.size                 = Size(214, 36);
		headerLabel.font                 = Font(L"CentraleSansBold", 24, false, false, false, false, Font::Antialias::High);
		headerLabel.text                 = Localization::selectDestination;    //L"";
		headerLabel.color                = Palette::White * 0.82;
		pathLabel.name                   = L"pathLabel";
		pathLabel.position               = Point(64, 78);
		pathLabel.size                   = Size(608, 36);
		pathLabel.font                   = Font(L"CentraleSansBold", 24, false, false, false, false, Font::Antialias::High);
		pathLabel.text                   = L"";
		pathLabel.textType               = TextType::SingleLineEllipsis;
		pathLabel.color                  = Palette::White * 0.82;
		pathLabel.verticalAlign          = VAlign::Middle;
		listPanel.name                   = L"listPanel";
		listPanel.position               = Point(24, 196);
		listPanel.size                   = Size(652, 360);
		//listFile.composerClass         = Control;
		listFile.name                    = L"listFile";
		listFile.size                    = Size(652, 360);
		listFile.area                    = Size(648, 640);
		listFile.headerHeight            = 64;
		listFile.itemHeight              = 64;
		listFile.font                    = Font(L"CentraleSansBook", 20, false, false, false, false, Font::Antialias::High);
		lblAddFolder.name                = L"lblAddFolder";
		lblAddFolder.position            = Point(16, 24);
		lblAddFolder.size                = Size(459, 28);
		lblAddFolder.font                = Font(L"CentraleSansBook", 20, false, false, false, false, Font::Antialias::High);
		lblAddFolder.visible             = false;
		lblAddFolder.text                = Localization::newFolderLabel;    //L"";
		lblFolderName.name               = L"lblFolderName";
		lblFolderName.position           = Point(16, 82);
		lblFolderName.size               = Size(90, 28);
		lblFolderName.font               = Font(L"CentraleSansBook", 20, false, false, false, false, Font::Antialias::High);
		lblFolderName.visible            = false;
		lblFolderName.text               = Localization::name;    //L"";
		lblFolderName.color              = Palette::Gray05;
		btnCreateFolder.name             = L"btnCreateFolder";
		btnCreateFolder.position         = Point(476, 65);
		btnCreateFolder.size             = Size(160, 64);
		btnCreateFolder.font             = Font(L"CentraleSansBook", 20, false, false, false, false, Font::Antialias::High);
		btnCreateFolder.visible          = false;
		btnCreateFolder.text             = Localization::create;    //L"";
		btnCreateFolder.radius           = Corners(4, 4, 4, 4);
		btnCreateFolder.colorFontUp      = Palette::White;
		btnCreateFolder.colorFontDown    = Palette::White;
		btnCreateFolder.colorFontHover   = Palette::White;
		btnCreateFolder.colorFontDisabled = Color::fromRgb(116, 116, 116);
		btnCreateFolder.colorButtonUp    = Palette::GroupBlue45;
		btnCreateFolder.colorButtonDown  = Palette::GroupBlue55;
		btnCreateFolder.colorButtonHover = Palette::GroupBlue50;
		btnCreateFolder.colorButtonDisabled = Color::fromRgb(45, 72, 94);
		btnCreateFolder.colorFocusUp     = Palette::GroupBlue45;
		btnCreateFolder.colorFocusDown   = Palette::GroupBlue55;
		btnCreateFolder.colorFocusHover  = Palette::GroupBlue50;
		btnCreateFolder.colorFocusDisabled = Palette::Blue45;
		wrongFilenameInfoLabel.name      = L"wrongFilenameInfoLabel";
		wrongFilenameInfoLabel.position  = Point(124, 146);
		wrongFilenameInfoLabel.size      = Size(20, 20);
		wrongFilenameInfoLabel.font      = Font(L"CentraleSansBook", 12, false, false, false, false, Font::Antialias::High);
		wrongFilenameInfoLabel.visible   = false;
		wrongFilenameInfoLabel.text      = L"";
		wrongFilenameInfoLabel.color     = Palette::S_Orange30;
		wrongFilenameInfoLabel.verticalAlign = VAlign::Middle;
		wrongFilenameInfoLabel.image     = Icons::Information_Circle_24;
		wrongFilenameInfoLabel.imageSize = Size(20, 20);
		wrongFilenameInfoLabel.imageSpacing = 8.6;
		wrongFilenameInfoLabel.imageColored = true;
		wrongFileNameLabel.name          = L"wrongFileNameLabel";
		wrongFileNameLabel.position      = Point(153, 145);
		wrongFileNameLabel.size          = Size(346, 47);
		wrongFileNameLabel.font          = Font(L"CentraleSansBook", 16, false, false, false, false, Font::Antialias::High);
		wrongFileNameLabel.visible       = false;
		wrongFileNameLabel.textType      = TextType::WordWrap;
		wrongFileNameLabel.color         = Palette::S_Orange30;
		btnCancel.name                   = L"btnCancel";
		btnCancel.position               = Point(264, 576);
		btnCancel.size                   = Size(200, 64);
		btnCancel.font                   = Font(L"CentraleSansBook", 20, false, false, false, false, Font::Antialias::High);
		btnCancel.text                   = Localization::cancel;    //L"";
		btnCancel.radius                 = Corners(4, 4, 4, 4);
		pathIcon.name                    = L"pathIcon";
		pathIcon.position                = Point(28, 85);
		pathIcon.size                    = Size(24, 24);
		pathIcon.text                    = L"";
		pathIcon.verticalAlign           = VAlign::Middle;
		pathIcon.imageSize               = Size(24, 24);
		layoutUpdateEnd();
		#pragma endregion
		listViewHeader4.name = L"listViewHeader4";
		listViewHeader4.size = Size(16, 64);
		listViewHeader4.resizable = false;
		listViewHeader4.clickable = false;
			listViewHeader.size = Size(48, 64);
			listViewHeader.resizable = false;
			listViewHeader.cellImageSize = Size(32, 32);
			listViewHeader2.name = L"listViewHeader2";
			listViewHeader2.size = Size(360, 64);
			listViewHeader2.resizable = false;
			listViewHeader2.clickable = false;
			listViewHeader2.font = Font(L"CentraleSansBook", 16, false, false, false, false, Font::Antialias::High);
			listViewHeader3.name = L"listViewHeader3";
			listViewHeader3.size = Size(212, 64);
			listViewHeader3.resizable = false;
			listViewHeader3.clickable = false;
			listViewHeader3.font = Font(L"CentraleSansBook", 16, false, false, false, false, Font::Antialias::High);
			editFolderName.name = L"editFolderName";
			editFolderName.position = Point(89, 65);
			editFolderName.size = Size(375, 64);
			editFolderName.visible = false;
			editFolderName.font = Font(L"CentraleSansBook", 20, false, false, false, false, Font::Antialias::High);
			pathLabel.imageSize = Size(25, 25);
			editFolderName.margin = Margin(18, 0, 40, 0);

			usbUnlockPasswordBox.name = L"usbPasswordEditBox";
			usbUnlockPasswordBox.position = Point(124, 65);
			usbUnlockPasswordBox.size = Size(339, 64);
			usbUnlockPasswordBox.visible = false;
			usbUnlockPasswordBox.font = Font(L"CentraleSansBook", 20, false, false, false, false, Font::Antialias::High);
			usbUnlockPasswordBox.margin = Margin(18, 0, 40, 0);
			usbUnlockPasswordBox.maxLength = 16;
			usbUnlockPasswordBox.radius = Corners(4, 4, 4, 4);
			usbUnlockPasswordBox.password = L'\x25cf';

			btnShowHide.position = Point(416, 81);
			btnShowHide.size = Size(34, 34);
			btnShowHide.visible = false;
			btnShowHide.image = Resource::Show_password_Touch_32;
			btnShowHide.bringToFront();
			btnShowHide.imageSize = Size(29, 29);
			pathIcon.image = Resource::USB_24; 
		}

	

		class ColoredEditBox : public TouchEditBox
		{
		public:
			ColoredEditBox(Control &parent, Workflow::Control::VirtualKeyboard &keyboard, const ClearButtonVisible showClear)
				:
				TouchEditBox(parent, keyboard, showClear)
			{
				setDefaultColor();
			}

			void setColorInvalidCredentials() {
				//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
				//                                   Up						UpFocus					Down					DownFocus				Hover					HoverFocus				Disabled               DisabledFocus               
				//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
				static const Color defaultColor[] = { Color::fromRgb(255, 241, 211),	Palette::White,					Palette::White,					Color::fromRgb(255, 241, 211),	Color::fromRgb(255, 241, 211),	Color::fromRgb(255, 241, 211),	Palette::White  * 0.35,	 Palette::White  * 0.35, };
				static const Color defaultFont[] = { Color::fromRgb(240, 124, 0),				Color::fromRgb(240, 124, 0),				Color::fromRgb(214, 214, 214)*0.8,			Color::fromRgb(214, 214, 214)*0.8,			Color::fromRgb(240,124,0),			Color::fromRgb(214, 214, 214)*0.8,			Color::fromRgb(214, 214, 214)*0.8,  Color::fromRgb(214, 214, 214)*0.8, };
				static const Color defaultWater[] = { Palette::Gray35,					Palette::Gray35,				Palette::Gray35,				Palette::Gray35,				Palette::Gray35,				Palette::Gray35,				Palette::Gray75 * 0.35,  Palette::Gray75 * 0.35, };
				static const Color defaultBorder[] = { Color::fromRgb(240, 124, 0),			Palette::White,			Color::fromRgb(120, 120, 120),		Color::fromRgb(120, 120, 120),		Palette::Gray30,		Palette::Gray30,		Palette::Gray20 * 0.35, Palette::Gray20 * 0.35, };
				//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

				colorBackground = &defaultColor;
				colorFont = &defaultFont;
				colorWater = &defaultWater;
				colorBorder = &defaultBorder;
				
			}

			void setDefaultColor() {
				//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
				//                                   Up						UpFocus					Down					DownFocus				Hover					HoverFocus				Disabled               DisabledFocus               
				//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
				static const Color defaultColor[] = { Palette::Gray80,			Palette::Gray80,			Palette::Gray80,			Palette::Gray80,			Palette::Gray80,			Palette::Gray80,			Palette::Gray80, Palette::Gray80, };
				static const Color defaultFont[] = { Color::fromRgb(140, 140, 140),			Color::fromRgb(140, 140, 140),		Color::fromRgb(140, 140, 140),		Color::fromRgb(140, 140, 140),		Color::fromRgb(140, 140, 140),		Color::fromRgb(140, 140, 140),		Color::fromRgb(140, 140, 140), Color::fromRgb(140, 140, 140), };
				static const Color defaultWater[] = { Palette::Gray35,		Palette::Gray35,		Palette::Gray35,		Palette::Gray35,		Palette::Gray35,		Palette::Gray35,		Palette::Gray75 * 0.35, Palette::Gray75 * 0.35, };
				static const Color defaultBorder[] = { Color::fromRgb(120, 120, 120),			Color::fromRgb(120, 120, 120),			Color::fromRgb(120, 120, 120),		Color::fromRgb(120, 120, 120),		Palette::Gray30,		Palette::Gray30,		Palette::Gray20 * 0.35, Palette::Gray20 * 0.35, };
				//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

				colorBackground = &defaultColor;
				colorFont = &defaultFont;
				colorWater = &defaultWater;
				colorBorder = &defaultBorder;
			}
		};

	#pragma region Sense Composer (do not modify)
	public:    Panel             panel;
	public:    Panel             DialogPanel;
	public:    ButtonCustom      btnSelect;
	public:    ButtonQuiet       btnBack;
	public:    ButtonQuiet       btnAddFolder;
	public:    Label             headerLabel;
	public:    Label             pathLabel;
	public:    Panel             listPanel;
	public:    CustomListView    listFile;
	public:    Label             lblAddFolder;
	public:    Label             lblFolderName;
	public:    ButtonCustom      btnCreateFolder;
	public:    Label             wrongFilenameInfoLabel;
	public:    Label             wrongFileNameLabel;
	public:    ButtonTouch       btnCancel;
	public:    Label             pathIcon;
	#pragma endregion
	public:    ColoredEditBox    editFolderName;
			   public:    ListViewHeader    listViewHeader4;
	private:   ListViewHeader    listViewHeader;
	public:    ListViewHeader    listViewHeader2;
	public:    ListViewHeader    listViewHeader3;
	public:    ColoredEditBox    usbUnlockPasswordBox;
	public:    ButtonQuiet       btnShowHide;
	private:

		FileBrowserTouch(const FileBrowserTouch&) = delete;
		FileBrowserTouch& operator=(const FileBrowserTouch&) = delete;
	};
}}}}


