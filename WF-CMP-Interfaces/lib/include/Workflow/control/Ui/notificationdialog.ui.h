// Copyright Koninklijke Philips N.V., 2020. All Right Reserved

/*----------------------------------------------------
 |   This file was generated by Sense Composer 2.0   |
 |  Do not modify the Sense Composer Generated Code  |
 ----------------------------------------------------*/
#pragma once

#include <Sense.h>
#include <DLS.h>

using namespace Sense;
using namespace Sense::DLS;

namespace Philips { namespace Workflow { namespace Control { namespace Ui {

	class NotificationDialog : public Control
	{
	public:

		NotificationDialog(Control &parent)
			:
			Control(parent)
#pragma region Sense Composer (do not modify)
			, dimmerPanel(*this)
			, windowPanel((Control&)dimmerPanel)
			, titleBarPanel((Control&)windowPanel)
			, titleBarTextLabel(titleBarPanel)
			, messageTitleLabel(windowPanel)
			, messageLabel(windowPanel)
			, buttonOne(windowPanel)
			, buttonTwo(windowPanel)
			, buttonThree(windowPanel)
#pragma endregion
		{
#pragma region Sense Composer (do not modify)
			layoutUpdateBegin();
			name = L"NotificationDialog";
			size = Size(1026, 851);
			visible = false;
			dimmerPanel.name = L"DimmerPanel";
			dimmerPanel.size = Size(1026, 851);
			dimmerPanel.colorBorder = Palette::Transparent * 0.00;
			dimmerPanel.colorEdge = Palette::Transparent * 0.00;
			dimmerPanel.color = Palette::Gray90 * 0.30;
			windowPanel.name = L"WindowPanel";
			windowPanel.position = Point(113, 185);
			windowPanel.size = Size(800, 480);
			windowPanel.shadow = Margin(8, 8, 8, 8);
			windowPanel.colorShadow = Palette::Black * 0.35;
			windowPanel.colorBorder = Palette::Transparent * 0.00;
			windowPanel.colorEdge = Palette::Transparent * 0.00;
			windowPanel.color = Palette::Gray65;
			titleBarPanel.name = L"TitleBarPanel";
			titleBarPanel.size = Size(800, 80);
			titleBarPanel.colorBorder = Palette::Transparent * 0.00;
			titleBarPanel.colorEdge = Palette::Transparent * 0.00;
			titleBarTextLabel.name = L"TitleBarTextLabel";
			titleBarTextLabel.position = Point(48, 24);
			titleBarTextLabel.size = Size(574.5, 40);
			titleBarTextLabel.font = Font(L"CentraleSansBold", 32, false, false, false, false, Font::Antialias::High);
			titleBarTextLabel.text = L"TitleText";
			messageTitleLabel.name = L"MessageTitleLabel";
			messageTitleLabel.position = Point(48, 128);
			messageTitleLabel.size = Size(712, 30);
			messageTitleLabel.font = Font(L"CentraleSansBold", 24, false, false, false, false, Font::Antialias::High);
			messageTitleLabel.text = L"MessageTitle";
			messageTitleLabel.color = Palette::White;
			messageTitleLabel.imagePosition = ImagePosition::Top;
			messageLabel.name = L"MessageLabel";
			messageLabel.position = Point(48, 192);
			messageLabel.size = Size(712, 152);
			messageLabel.font = Font(L"CentraleSansBook", 20, false, false, false, false, Font::Antialias::High);
			messageLabel.text = L"Message";
			messageLabel.textType = TextType::WordWrap;
			messageLabel.color = Palette::Gray15;
			buttonOne.name = L"ButtonOne";
			buttonOne.position = Point(560, 376);
			buttonOne.size = Size(200, 64);
			buttonOne.font = Font(L"CentraleSansBook", 20, false, false, false, false, Font::Antialias::High);
			buttonOne.text = L"ButtonOne";
			buttonOne.textType = TextType::SingleLine;
			buttonTwo.name = L"ButtonTwo";
			buttonTwo.position = Point(344, 376);
			buttonTwo.size = Size(200, 64);
			buttonTwo.font = Font(L"CentraleSansBook", 20, false, false, false, false, Font::Antialias::High);
			buttonTwo.text = L"ButtonTwo";
			buttonTwo.textType = TextType::SingleLine;
			buttonThree.name = L"ButtonThree";
			buttonThree.position = Point(128, 376);
			buttonThree.size = Size(200, 64);
			buttonThree.font = Font(L"CentraleSansBook", 20, false, false, false, false, Font::Antialias::High);
			buttonThree.text = L"ButtonThree";
			buttonThree.textType = TextType::SingleLine;
			layoutUpdateEnd();
#pragma endregion
		}

#pragma region Sense Composer (do not modify)
	public:    Panel             dimmerPanel;
	public:    Panel             windowPanel;
	public:    Panel             titleBarPanel;
	public:    Label             titleBarTextLabel;
	public:    Label             messageTitleLabel;
	public:    Label             messageLabel;
	public:    ButtonPrimary     buttonOne;
	public:    ButtonQuiet       buttonTwo;
	public:    ButtonQuiet       buttonThree;
#pragma endregion

	private:

		NotificationDialog(const NotificationDialog&);
		NotificationDialog& operator=(const NotificationDialog&);
	};
}}}}


